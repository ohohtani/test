*****손실함수(loss fucntcion):예측값과 실제값의 차이
입력값이 들어오면 어떤 모델을 거쳐서 예측값을 산출 그 예측값이 실제값과 얼마나 유사한지를 판단하는 기능이 필요한데 그게바로 로스펑션(손실함수)
손실함수값이 작다라는 얘기는 예측이 잘 되고있다라고 단편적으로 해석할 수 있음.

세그멘테이션 모델의 학습에 적합: IoU는 세그멘테이션 모델의 출력과 실제 타깃 사이의 유사도를 측정하는 지표. 
                                모델이 예측한 마스크와 실제 마스크 간의 일치도를 최대화하기 위해 이러한 Iou손실 함수를 사용하는 것이 적절함.

세그멘테이션 모델의 학습에 사용되는 IoU 손실 함수는 모델이 정확한 마스크 예측을 학습할 수 있도록 도움을 줌.
여기서 마스크는 이미지 처리에서 픽셀 단위로 객체 또는 특정 영역을 표시하는 이진 이미지.
세그멘테이션 작업에서 마스크는 픽셀 단위로 각 픽셀이 객체에 속하는지 여부를 나타냄
이진 마스크는 일반적으로 0과 1의 값으로 구성되며,0은 배경을 나타내고 1은 객체를 나타냄


IoULoss 클래스:
outputs는 모델이 예측한 마스크 텐서이고, targets는 실제 마스크 텐서 
이 함수는 예측된 마스크와 실제 마스크의 IoU를 계산하여 손실 값을 구함 
IoU는 교집합을 합집합으로 나눈 값으로서, 두 마스크의 일치 정도를 나타냄.
손실 값은 1에서 평균 IoU를 뺀 값으로 계산
이 손실 함수를 사용하여 모델을 학습할 때 예측된 마스크와 실제 마스크 간의 유사도를 최대화하는 방향으로 학습이 진행

기본 제공 코드의 장점:

간결한 구조: 기본 제공 코드는 U-Net 모델을 구성하는 데 필요한 요소들을 간결하게 정의하고 있음. 필요한 모듈과 레이어가 빠짐없이 포함되어 있어 이해하기 쉽고 수정이 쉬움.
기본 손실 함수 사용: 기본 제공 코드는 torch.nn.BCEWithLogitsLoss()를 사용하여 이진 분류 작업에 적합한 손실 함수를 사용하고 있는데 이 함수는 일반적으로 이진 분류에서 사용되는 표준 손실 함수로, 모델이 마스크와 배경을 올바르게 구분하도록 도움을 줌.


기본 제공 코드에 IoU 손실 함수를 추가한 코드의 장점:

픽셀 수준의 예측 정확도 개선: IoU 손실 함수는 모델의 예측된 마스크와 실제 마스크 사이의 IoU를 계산하여 픽셀 수준의 일치도를 고려함. 이를 통해 모델이 더 정확한 마스크 예측을 학습할 수 있도록 도움을 줌. 따라서, 모델의 픽셀 수준 예측 정확도를 개선하고자 할 때 좋음.


기본 제공 코드에 IoU 손실 함수를 추가한 코드의 단점:

코드의 복잡성 증가: IoU 손실 함수를 추가함으로써 코드의 복잡성이 높아졌음. 추가된 손실 함수의 정의와 계산 과정을 이해하고 유지 관리하기 위해 더 많은 노력이 필요함.

추가된 손실 함수의 성능 검증 필요: IoU 손실 함수를 추가하면 성능에 대한 검증이 필요함. 손실 함수가 모델의 학습에 실질적인 개선을 제공하는지 확인해야 함. 
이를 위해 추가 실험이나 비교적 큰 데이터셋에서의 검증이 필요할 수 있음.
